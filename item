local ItemESP = {}

local espEnabled = false
local maxDistance = 1000
local espObjects = {}

function ItemESP.Init()
    game:GetService("RunService").RenderStepped:Connect(function()
        if espEnabled then
            ItemESP.Update()
        end
    end)
    return ItemESP
end

function ItemESP.CreateESP(item)
    if not item:IsA("Model") and not item:IsA("BasePart") then return end
    
    -- Get a valid part to attach to
    local part
    if item:IsA("Model") and item:FindFirstChild("PrimaryPart") then
        part = item.PrimaryPart
    else
        part = item:IsA("BasePart") and item or item:FindFirstChildWhichIsA("BasePart")
    end
    
    if not part then return end
    
    -- Create the ESP text (SimpleBillboardGui approach)
    local name = Drawing.new("Text")
    name.Visible = true
    name.Text = "ðŸ’Ž " .. item.Name
    name.Size = 18
    name.Color = Color3.fromRGB(0, 255, 255)
    name.Center = true
    name.Outline = true
    name.OutlineColor = Color3.fromRGB(0, 0, 0)
    
    local info = Drawing.new("Text")
    info.Visible = false  -- Hide by default unless we have info
    info.Size = 14
    info.Color = Color3.fromRGB(255, 255, 255)
    info.Center = true
    info.Outline = true
    info.OutlineColor = Color3.fromRGB(0, 0, 0)
    
    -- Get additional info if available
    if item:FindFirstChild("ObjectInfo") and item.ObjectInfo:FindFirstChild("TextLabel") then
        info.Text = item.ObjectInfo.TextLabel.Text
        info.Visible = true
    end
    
    table.insert(espObjects, {
        name = name,
        info = info,
        item = item,
        part = part
    })
    
    return {name = name, info = info}
end

function ItemESP.Update()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
    local camera = workspace.CurrentCamera
    
    if not espEnabled then
        for _, obj in pairs(espObjects) do
            obj.name.Visible = false
            obj.info.Visible = false
        end
        return
    end
    
    if not humanoidRootPart then return end
    
    -- Helper function to check if an object exists
    local function exists(obj)
        return obj and obj.Parent ~= nil
    end
    
    -- Update existing ESP objects
    for i = #espObjects, 1, -1 do
        local obj = espObjects[i]
        
        if not exists(obj.item) or not exists(obj.part) then
            -- Clean up if object no longer exists
            obj.name.Visible = false
            obj.info.Visible = false
            table.remove(espObjects, i)
        else
            local pos = obj.part.Position
            local distance = (humanoidRootPart.Position - pos).Magnitude
            
            if distance <= maxDistance then
                local screenPos, onScreen = camera:WorldToScreenPoint(pos + Vector3.new(0, 2, 0))
                
                if onScreen then
                    -- Update name
                    obj.name.Visible = true
                    obj.name.Position = Vector2.new(screenPos.X, screenPos.Y)
                    obj.name.Text = "ðŸ’Ž " .. obj.item.Name .. " [" .. math.floor(distance) .. "m]"
                    
                    -- Scale text based on distance
                    local scale = math.clamp(1 - (distance / maxDistance) * 0.6, 0.4, 1)
                    obj.name.Size = math.floor(18 * scale)
                    
                    -- Apply transparency based on distance
                    local transparency = math.clamp((distance / maxDistance) * 0.7, 0, 0.7)
                    obj.name.Transparency = transparency
                    
                    -- Update info if it exists
                    if obj.info.Visible then
                        obj.info.Position = Vector2.new(screenPos.X, screenPos.Y + obj.name.TextBounds.Y)
                        obj.info.Size = math.floor(14 * scale)
                        obj.info.Transparency = transparency
                        
                        -- Update the info text if it has ObjectInfo
                        if obj.item:FindFirstChild("ObjectInfo") and obj.item.ObjectInfo:FindFirstChild("TextLabel") then
                            obj.info.Text = obj.item.ObjectInfo.TextLabel.Text
                        end
                    end
                else
                    obj.name.Visible = false
                    obj.info.Visible = false
                end
            else
                obj.name.Visible = false
                obj.info.Visible = false
            end
        end
    end
    
    -- Find and add new items
    if workspace:FindFirstChild("RuntimeItems") then
        for _, item in pairs(workspace.RuntimeItems:GetChildren()) do
            local found = false
            for _, obj in pairs(espObjects) do
                if obj.item == item then
                    found = true
                    break
                end
            end
            
            if not found then
                ItemESP.CreateESP(item)
            end
        end
    end
end

function ItemESP.Toggle(enabled)
    espEnabled = enabled
    
    if not enabled then
        for _, obj in pairs(espObjects) do
            obj.name.Visible = false
            if obj.info then
                obj.info.Visible = false
            end
        end
    end
end

function ItemESP.SetMaxDistance(distance)
    maxDistance = distance
end

function ItemESP.IsEnabled()
    return espEnabled
end

-- Clean up when the script is destroyed
game:GetService("Players").LocalPlayer.CharacterRemoving:Connect(function()
    for _, obj in pairs(espObjects) do
        obj.name.Visible = false
        obj.info.Visible = false
    end
end)

return ItemESP.Init()
