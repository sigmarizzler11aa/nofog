local ItemESP = {}

local espEnabled = false
local maxDistance = 1000
local espObjects = {}
local screenPositions = {}

function ItemESP.Init()
    game:GetService("RunService").RenderStepped:Connect(function()
        if espEnabled then
            ItemESP.Update()
        end
    end)
    return ItemESP
end

function ItemESP.CreateESP(item)
    if not item:IsA("Model") and not item:IsA("BasePart") then return end
    
    local esp = Instance.new("BillboardGui")
    esp.Name = "ItemESP"
    esp.AlwaysOnTop = true
    esp.Size = UDim2.new(0, 200, 0, 70) -- Taller for possible item info
    esp.StudsOffset = Vector3.new(0, 2, 0)
    
    if item:IsA("Model") and item:FindFirstChild("PrimaryPart") then
        esp.Adornee = item.PrimaryPart
    else
        local part = item:IsA("BasePart") and item or item:FindFirstChildWhichIsA("BasePart")
        if part then
            esp.Adornee = part
        else
            esp:Destroy()
            return
        end
    end
    
    -- Item name label
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.BackgroundTransparency = 1 -- Fully transparent background
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.Text = "ðŸ’Ž " .. item.Name
    nameLabel.TextColor3 = Color3.fromRGB(0, 255, 255) -- Cyan
    nameLabel.TextStrokeTransparency = 0 -- Full stroke for better visibility
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.TextSize = 18
    nameLabel.Parent = esp
    
    -- Item info label (for additional info if available)
    local infoLabel = Instance.new("TextLabel")
    infoLabel.Name = "InfoLabel"
    infoLabel.BackgroundTransparency = 1 -- Fully transparent background
    infoLabel.Size = UDim2.new(1, 0, 0.5, 0)
    infoLabel.Position = UDim2.new(0, 0, 0.5, 0)
    infoLabel.Text = ""
    infoLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White
    infoLabel.TextStrokeTransparency = 0 -- Full stroke for better visibility
    infoLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    infoLabel.Font = Enum.Font.SourceSans
    infoLabel.TextSize = 14
    infoLabel.Parent = esp
    
    -- Get info from ObjectInfo if it exists
    if item:FindFirstChild("ObjectInfo") and item.ObjectInfo:FindFirstChild("TextLabel") then
        infoLabel.Text = item.ObjectInfo.TextLabel.Text
    end
    
    esp.Parent = game.CoreGui
    
    table.insert(espObjects, {
        esp = esp,
        item = item,
        lastPosition = Vector2.new(0, 0),
        offset = Vector2.new(0, 0)
    })
    
    return esp
end

-- Function to find an appropriate position for an ESP tag to avoid overlap
function ItemESP.FindNonOverlappingPosition(position, objectIndex)
    local minDistance = 80 -- Minimum distance between ESP tags in pixels (slightly larger for items)
    local maxAttempts = 5
    local currentPos = Vector2.new(position.X, position.Y)
    local bestPos = currentPos
    local minOverlap = math.huge
    
    -- Try several positions to find the best one
    for attempt = 1, maxAttempts do
        local overlapping = false
        local totalOverlap = 0
        
        for i, pos in pairs(screenPositions) do
            if i ~= objectIndex then
                local distance = (currentPos - pos).Magnitude
                if distance < minDistance then
                    overlapping = true
                    totalOverlap = totalOverlap + (minDistance - distance)
                end
            end
        end
        
        -- If we found a position with less overlap, keep it
        if totalOverlap < minOverlap then
            minOverlap = totalOverlap
            bestPos = currentPos
            
            -- If there's no overlap at all, we can stop searching
            if not overlapping then
                break
            end
        end
        
        -- Try offsetting the position in a spiral pattern
        if attempt == 1 then
            currentPos = Vector2.new(position.X, position.Y - minDistance)
        elseif attempt == 2 then
            currentPos = Vector2.new(position.X + minDistance, position.Y)
        elseif attempt == 3 then
            currentPos = Vector2.new(position.X, position.Y + minDistance)
        elseif attempt == 4 then
            currentPos = Vector2.new(position.X - minDistance, position.Y)
        elseif attempt == 5 then
            currentPos = Vector2.new(position.X + minDistance, position.Y - minDistance)
        end
    end
    
    return bestPos
end

function ItemESP.Update()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
    local camera = workspace.CurrentCamera
    
    if not espEnabled or not humanoidRootPart then
        for _, obj in pairs(espObjects) do
            if obj.esp then
                obj.esp:Destroy()
            end
        end
        espObjects = {}
        screenPositions = {}
        return
    end
    
    -- Reset screen positions for this frame
    screenPositions = {}
    
    -- Get item position function
    local function getItemPosition(item)
        if item:IsA("Model") and item:FindFirstChild("PrimaryPart") then
            return item.PrimaryPart.Position
        else
            local part = item:IsA("BasePart") and item or item:FindFirstChildWhichIsA("BasePart")
            if part then
                return part.Position
            end
            return Vector3.new(0, 0, 0)
        end
    end
    
    -- Sort ESP objects by distance (closest first for priority)
    table.sort(espObjects, function(a, b)
        local aDistance = (humanoidRootPart.Position - getItemPosition(a.item)).Magnitude
        local bDistance = (humanoidRootPart.Position - getItemPosition(b.item)).Magnitude
        return aDistance < bDistance
    end)
    
    -- First pass: calculate screen positions
    for i, obj in ipairs(espObjects) do
        if obj.esp and obj.esp.Parent and obj.item and obj.item.Parent then
            local itemPosition = getItemPosition(obj.item)
            local distance = (humanoidRootPart.Position - itemPosition).Magnitude
            
            if distance <= maxDistance then
                -- Calculate screen position
                local screenPoint, onScreen = camera:WorldToScreenPoint(itemPosition + Vector3.new(0, 2, 0))
                
                if onScreen then
                    obj.lastPosition = Vector2.new(screenPoint.X, screenPoint.Y)
                    screenPositions[i] = obj.lastPosition
                else
                    obj.esp.Enabled = false
                end
            else
                obj.esp.Enabled = false
            end
        else
            if obj.esp and obj.esp.Parent then
                obj.esp:Destroy()
            end
            table.remove(espObjects, i)
            i = i - 1
        end
    end
    
    -- Second pass: adjust positions to avoid overlap and update ESP
    for i, obj in ipairs(espObjects) do
        if obj.esp and obj.esp.Parent and obj.item and obj.item.Parent then
            local itemPosition = getItemPosition(obj.item)
            local distance = (humanoidRootPart.Position - itemPosition).Magnitude
            
            if distance <= maxDistance then
                -- Get non-overlapping position
                local adjustedPos = ItemESP.FindNonOverlappingPosition(obj.lastPosition, i)
                obj.offset = adjustedPos - obj.lastPosition
                
                -- Apply the position and update the ESP
                obj.esp.Enabled = true
                
                -- Scale size and transparency based on distance
                local scaleFactor = math.clamp(1 - (distance / maxDistance) * 0.6, 0.4, 1)
                obj.esp.Size = UDim2.new(0, 200 * scaleFactor, 0, 70 * scaleFactor)
                
                -- Update name label
                local nameLabel = obj.esp:FindFirstChild("NameLabel")
                if nameLabel then
                    nameLabel.TextTransparency = math.clamp((distance / maxDistance) * 0.7, 0, 0.7)
                    nameLabel.Text = "ðŸ’Ž " .. obj.item.Name .. " [" .. math.floor(distance) .. "m]"
                    nameLabel.TextSize = math.floor(18 * scaleFactor)
                end
                
                -- Update info label if ObjectInfo exists
                local infoLabel = obj.esp:FindFirstChild("InfoLabel")
                if infoLabel and obj.item:FindFirstChild("ObjectInfo") and obj.item.ObjectInfo:FindFirstChild("TextLabel") then
                    infoLabel.Text = obj.item.ObjectInfo.TextLabel.Text
                    infoLabel.TextTransparency = math.clamp((distance / maxDistance) * 0.7, 0, 0.7)
                    infoLabel.TextSize = math.floor(14 * scaleFactor)
                end
                
                -- Apply calculated offset to avoid overlapping
                obj.esp.ExtentsOffset = Vector3.new(obj.offset.X / 40, obj.offset.Y / 40, 0)
            else
                obj.esp.Enabled = false
            end
        end
    end
    
    -- Find and add new items
    if workspace:FindFirstChild("RuntimeItems") then
        for _, item in pairs(workspace.RuntimeItems:GetChildren()) do
            local found = false
            for _, obj in pairs(espObjects) do
                if obj.item == item then
                    found = true
                    break
                end
            end
            
            if not found then
                ItemESP.CreateESP(item)
            end
        end
    end
end

function ItemESP.Toggle(enabled)
    espEnabled = enabled
    if enabled then
        ItemESP.Update()
    else
        for _, obj in pairs(espObjects) do
            if obj.esp then
                obj.esp:Destroy()
            end
        end
        espObjects = {}
        screenPositions = {}
    end
end

function ItemESP.SetMaxDistance(distance)
    maxDistance = distance
end

function ItemESP.IsEnabled()
    return espEnabled
end

return ItemESP.Init()
